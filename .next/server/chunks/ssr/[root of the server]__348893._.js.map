{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/varic/Programs/ReactNextTutorial/react_next_webapp/src/app/create-resume/builder/page.tsx"],"sourcesContent":["'use client'\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\nimport dynamic from 'next/dynamic'\r\nimport { useState, useEffect } from 'react';\r\nimport { pdfjs } from 'react-pdf';\r\n\r\n// Set worker path\r\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\r\n  'pdfjs-dist/build/pdf.worker.min.mjs',\r\n  import.meta.url,\r\n).toString();\r\n\r\n//pdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\r\n\r\n// Dynamically import react-pdf components\r\nconst Document = dynamic(() => import('react-pdf').then(mod => mod.Document), {\r\n  ssr: false\r\n})\r\nconst Page = dynamic(() => import('react-pdf').then(mod => mod.Page), {\r\n  ssr: false\r\n})\r\n\r\ninterface Job {\r\n  company: string;\r\n  title: string;\r\n  years: string;\r\n}\r\n\r\ntype TemplateKey = 'company1' | 'title1' | 'years1';\r\nconst TEMPLATE_MAPPINGS: Record<TemplateKey, { x: number; y: number }> = {\r\n  company1: { x: 50, y: 200 },\r\n  title1: { x: 50, y: 220 },\r\n  years1: { x: 50, y: 240 },\r\n  // Add more mappings as needed\r\n};\r\n\r\nexport default function ResumeBuilder() {\r\n  const [jobs, setJobs] = useState<Job[]>([]);\r\n  const [pdfUrl, setPdfUrl] = useState<string>('/path-to-your-template.pdf');\r\n  const [scale, setScale] = useState(1.0);\r\n\r\n  // Function to handle PDF rendering\r\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\r\n    // Handle successful load\r\n  };\r\n\r\n  // Add a function to add new jobs\r\n  const addJob = (job: Job) => {\r\n    setJobs(prevJobs => [...prevJobs, job]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-slate-900 p-6\">\r\n      <main className=\"max-w-6xl mx-auto pt-16\">\r\n        <div className=\"grid md:grid-cols-2 gap-6 h-[calc(100vh-8rem)]\">\r\n          {/* Left side - Terminal (keep existing code) */}\r\n          \r\n          {/* Right side - PDF Preview */}\r\n          <div className=\"bg-white rounded-lg p-6 overflow-auto relative\">\r\n            <h2 className=\"text-2xl font-bold text-slate-800 mb-4\">Resume Preview</h2>\r\n            \r\n            {/* PDF Display */}\r\n            <div className=\"relative\">\r\n              <Document\r\n                file={pdfUrl}\r\n                onLoadSuccess={onDocumentLoadSuccess}\r\n                className=\"resume-document\"\r\n              >\r\n                <Page \r\n                  pageNumber={1} \r\n                  scale={scale}\r\n                  className=\"resume-page\"\r\n                />\r\n              </Document>\r\n\r\n              {/* Overlay div for user inputs */}\r\n              <div className=\"absolute top-0 left-0 w-full h-full pointer-events-none\">\r\n                {jobs.map((job, index) => (\r\n                  <div key={index}>\r\n                    <div style={{ \r\n                      position: 'absolute',\r\n                      left: TEMPLATE_MAPPINGS[`company${index + 1}` as keyof typeof TEMPLATE_MAPPINGS].x,\r\n                      top: TEMPLATE_MAPPINGS[`company${index + 1}` as keyof typeof TEMPLATE_MAPPINGS].y,\r\n                    }}>\r\n                      {job.company}\r\n                    </div>\r\n                    <div style={{\r\n                      position: 'absolute',\r\n                      left: TEMPLATE_MAPPINGS[`title${index + 1}` as keyof typeof TEMPLATE_MAPPINGS].x,\r\n                      top: TEMPLATE_MAPPINGS[`title${index + 1}` as keyof typeof TEMPLATE_MAPPINGS].y,\r\n                    }}>\r\n                      {job.title}\r\n                    </div>\r\n                    <div style={{\r\n                      position: 'absolute',\r\n                      left: TEMPLATE_MAPPINGS[`years${index + 1}` as keyof typeof TEMPLATE_MAPPINGS].x,\r\n                      top: TEMPLATE_MAPPINGS[`years${index + 1}` as keyof typeof TEMPLATE_MAPPINGS].y,\r\n                    }}>\r\n                      {job.years}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;;;;AAJA;;;;;AAMA,kBAAkB;AAClB,+KAAA,CAAA,QAAK,CAAC,mBAAmB,CAAC,SAAS,GAAG,uIAGpC,QAAQ;AAEV,2HAA2H;AAE3H,0CAA0C;AAC1C,MAAM,WAAW,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;;;IACrB,KAAK;;AAEP,MAAM,OAAO,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;;;IACjB,KAAK;;AAUP,MAAM,oBAAmE;IACvE,UAAU;QAAE,GAAG;QAAI,GAAG;IAAI;IAC1B,QAAQ;QAAE,GAAG;QAAI,GAAG;IAAI;IACxB,QAAQ;QAAE,GAAG;QAAI,GAAG;IAAI;AAE1B;AAEe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC1C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,mCAAmC;IACnC,MAAM,wBAAwB,CAAC,EAAE,QAAQ,EAAwB;IAC/D,yBAAyB;IAC3B;IAEA,iCAAiC;IACjC,MAAM,SAAS,CAAC;QACd,QAAQ,CAAA,WAAY;mBAAI;gBAAU;aAAI;IACxC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAK,WAAU;sBACd,cAAA,8OAAC;gBAAI,WAAU;0BAIb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCAGvD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,MAAM;oCACN,eAAe;oCACf,WAAU;8CAEV,cAAA,8OAAC;wCACC,YAAY;wCACZ,OAAO;wCACP,WAAU;;;;;;;;;;;8CAKd,8OAAC;oCAAI,WAAU;8CACZ,KAAK,GAAG,CAAC,CAAC,KAAK,sBACd,8OAAC;;8DACC,8OAAC;oDAAI,OAAO;wDACV,UAAU;wDACV,MAAM,iBAAiB,CAAC,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAmC,CAAC,CAAC;wDAClF,KAAK,iBAAiB,CAAC,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAmC,CAAC,CAAC;oDACnF;8DACG,IAAI,OAAO;;;;;;8DAEd,8OAAC;oDAAI,OAAO;wDACV,UAAU;wDACV,MAAM,iBAAiB,CAAC,CAAC,KAAK,EAAE,QAAQ,GAAG,CAAmC,CAAC,CAAC;wDAChF,KAAK,iBAAiB,CAAC,CAAC,KAAK,EAAE,QAAQ,GAAG,CAAmC,CAAC,CAAC;oDACjF;8DACG,IAAI,KAAK;;;;;;8DAEZ,8OAAC;oDAAI,OAAO;wDACV,UAAU;wDACV,MAAM,iBAAiB,CAAC,CAAC,KAAK,EAAE,QAAQ,GAAG,CAAmC,CAAC,CAAC;wDAChF,KAAK,iBAAiB,CAAC,CAAC,KAAK,EAAE,QAAQ,GAAG,CAAmC,CAAC,CAAC;oDACjF;8DACG,IAAI,KAAK;;;;;;;2CApBJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+B5B"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}